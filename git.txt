git reset --hard HEAD^
就回到上次提交的版本号了
再上一次的话，就HEAD^^
若有100次的话就HEAD~100


git reset --hard 8912198
回到最新的某版本号
如果 没有版本 head id 的话 用git reflog
会有每次提交的版本号

小结：

>HEAD指向当前版本 回退的命令是 git reset --hard commit_id
>回退前，git log 可以查看提交历史，以便确定回到哪个版本
>要重返未来，用git reflog查看命令历史，确定回到未来哪个版本



*************
暂存区是git非常重要的概念，弄明白了暂存区，就弄明白了git的很多操作到底干了什么


*************
管理修改

git diff HEAD --readme.txt 可以查看工作区和版本库里面最新版的区别


*************
撤消修改
1.未添加到暂存区时，就下面这个哦 git status 
git checkout -- readme.txt
2.添加到暂存区时，需要 git status
git reset HEAD reademe.txt 放到了工作区（unstage）
再来一个git checkout -- reademt.txt


小结:
3.若添加到版本库时，用git reset --hard HEAD^就ok了



**************
删除文件

git checkout 其实是用版本库的版本替换工作区的版本








